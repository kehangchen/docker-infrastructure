version: '3'
services:
  local_visualizer:
    image: dockersamples/visualizer
    container_name: ${instance_prefix}_visualizer
    ports:
      - "9086:8080"
    stop_grace_period: 1m30s
    volumes:
      - "/var/run/docker.sock:/var/run/docker.sock"
    deploy:
      placement:
        constraints: [node.role == manager]

  local_registry:
    image: registry
    container_name: ${instance_prefix}_registry
    ports:
      - "9084:5000"
    volumes:
      - ${infrastructure_home}/registry:/var/lib/registry
    deploy:
      placement:
        constraints: [node.role == manager]
    restart: always

  local_postgresql:
    image: postgres
    container_name: ${instance_prefix}_postgresql
    ports:
      - 5432:5432
    networks:
      - infrastructurenet
    volumes:
      - ${infrastructure_home}/postgresql/data:/var/lib/postgresql/data
      - ./multiple-databases/create-multiple-postgresql-databases.sh:/docker-entrypoint-initdb.d/create-multiple-postgresql-databases.sh
    environment:
      - POSTGRES_MULTIPLE_DATABASES=sonar,artifactory,gitlab
      # The following must match the DB_USER and DB_PASSWORD values passed to Artifactory
      - POSTGRES_USER=infrastructure
      - POSTGRES_PASSWORD=password
    restart: always
    ulimits:
      nproc: 65535
      nofile:
        soft: 32000
        hard: 40000

  local_artifactory:
    image: docker.bintray.io/jfrog/artifactory-oss:latest
    container_name: ${instance_prefix}_artifactory
    ports:
      - 9081:8081
    networks:
      - infrastructurenet
    depends_on:
      - ${instance_prefix}_postgresql
    volumes:
      - ${infrastructure_home}/artifactory:/var/opt/jfrog/artifactory
      - ./database-properties/db.properties:/var/opt/jfrog/artifactory/etc/db.properties
    environment:
      - DB_TYPE=postgresql
      # The following must match the POSTGRES_USER and POSTGRES_PASSWORD values passed to PostgreSQL
      - DB_URL=jdbc:postgresql://${instance_prefix}_postgresql:5432/artifactory
      - DB_USER=artifactory
      - DB_PASSWORD=password
      # Add extra Java options by uncommenting the following line
      #- EXTRA_JAVA_OPTIONS=-Xmx4g
    restart: always
    ulimits:
      nproc: 65535
      nofile:
        soft: 32000
        hard: 40000

  local_sonarqube:
    image: sonarqube
    container_name: ${instance_prefix}_sonarqube
    ports:
      - "9000:9000"
    networks:
      - infrastructurenet
    depends_on:
      - ${instance_prefix}_postgresql
    volumes:
      - ${infrastructure_home}/sonarqube/conf:/opt/sonarqube/conf
      - ${infrastructure_home}/sonarqube/data:/opt/sonarqube/data
      - ${infrastructure_home}/sonarqube/logs:/opt/sonarqube/logs
      - ${infrastructure_home}/sonarqube/extensions:/opt/sonarqube/extensions
    environment:
      - sonar.jdbc.url=jdbc:postgresql://local_postgresql:5432/sonar
      - sonar.jdbc.username=sonar
      - sonar.jdbc.password=password
    restart: always 

  local_jenkins:
    image: jenkins/jenkins:lts
    container_name: ${instance_prefix}_jenkins
    ports:
      - "50000:50000"
      - "9080:8080"
    volumes:
      - ${infrastructure_home}/jenkins:/var/jenkins_home
    environment:
      JAVA_OPTS: "-Djava.awt.headless=true -Dmail.smtp.starttls.enable=true"
    restart: always

  local_gitlab:
    image: 'gitlab/gitlab-ce:latest'
    container_name: ${instance_prefix}_gitlab
    ports:
      - '9082:80'
      - '2022:22'
    networks:
      - infrastructurenet
    environment:
      GITLAB_OMNIBUS_CONFIG: |
        # Disable the built-in Postgres
        postgresql['enable'] = false
        # Fill in the connection details for database.yml
        gitlab_rails['db_adapter'] = 'postgresql'
        gitlab_rails['db_encoding'] = 'utf8'
        gitlab_rails['db_host'] = '${instance_prefix}_postgresql'
        gitlab_rails['db_database'] = 'gitlab'
        gitlab_rails['db_port'] = 5432
        gitlab_rails['db_username'] = 'gitlab'
        gitlab_rails['db_password'] = 'password'
        # external_url 'https://gitlab.example.com'
        # Add any other gitlab.rb configuration here, each on its own line
    restart: always
    volumes:
      - ${infrastructure_home}/gitlab/config:/etc/gitlab
      - ${infrastructure_home}/gitlab/logs:/var/log/gitlab
      - ${infrastructure_home}/gitlab/data:/var/opt/gitlab

networks:
  infrastructurenet:
    driver: bridge